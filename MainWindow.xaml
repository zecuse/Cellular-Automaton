<Window x:Class="CellularAutomaton.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:CellularAutomaton"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800">
    <Window.Resources>
        <BitmapImage x:Key="PlayIcon" UriSource="Images/Play.png"/>
        <BitmapImage x:Key="PauseIcon" UriSource="Images/Pause.png"/>
        
        <Style x:Key="Base" TargetType="Control">
            <Setter Property="Padding" Value="5"/>
            <Setter Property="Margin" Value="5"/>
        </Style>
        <Style x:Key="BorderBase" TargetType="Border">
            <Setter Property="Margin" Value="5"/>
        </Style>
        <Style x:Key="Steps" TargetType="Slider" BasedOn="{StaticResource Base}">
            <Setter Property="Minimum" Value="1"/>
            <Setter Property="Maximum" Value="5"/>
            <Setter Property="Value" Value="1"/>
            <Setter Property="SmallChange" Value="1"/>
            <Setter Property="LargeChange" Value="1"/>
            <Setter Property="TickPlacement" Value="BottomRight"/>
            <Setter Property="TickFrequency" Value="1"/>
            <Setter Property="IsSnapToTickEnabled" Value="True"/>
            <Setter Property="Foreground" Value="Green"/>
        </Style>
        <Style x:Key="ZoomControl" TargetType="Slider" BasedOn="{StaticResource Base}">
            <Setter Property="Orientation" Value="Vertical"/>
            <Setter Property="Minimum" Value="0"/>
            <Setter Property="Maximum" Value="1"/>
            <Setter Property="TickPlacement" Value="BottomRight"/>
            <Setter Property="TickFrequency" Value="0.1"/>
            <Setter Property="Value" Value="1"/>
        </Style>
        <Style x:Key="IconToggle" TargetType="Image">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=Paused}" Value="False">
                    <Setter Property="Source" Value="{StaticResource PauseIcon}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=Paused}" Value="True">
                    <Setter Property="Source" Value="{StaticResource PlayIcon}"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="Player" TargetType="Button" BasedOn="{StaticResource Base}">
            <Setter Property="Width" Value="25"/>
            <Setter Property="Height" Value="25"/>
            <Setter Property="Padding" Value="0"/>
        </Style>
    </Window.Resources>
    <!--possibly look into this for cooridinate grid-->
    <!--https://stackoverflow.com/questions/276808/how-to-populate-a-wpf-grid-based-on-a-2-dimensional-array-->
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Slider Grid.Column="0" x:Name="Zoom" Style="{StaticResource ZoomControl}"/>
        <Grid Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Slider Grid.Row="0" x:Name="StepRate" Style="{StaticResource Steps}"/>
            <StackPanel Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Left">
                <Button Style="{StaticResource Base}" Content="Step"/>
                <Button Style="{StaticResource Player}">
                    <Image Style="{StaticResource IconToggle}"/>
                </Button>
            </StackPanel>
            <Border Grid.Row="2" Style="{StaticResource BorderBase}" BorderBrush="Black" BorderThickness="0.5">
                <UniformGrid HorizontalAlignment="Center" VerticalAlignment="Center">
                    <UniformGrid.LayoutTransform>
                        <ScaleTransform CenterX="0" CenterY="0" ScaleX="{Binding ElementName=Zoom, Path=Value}" ScaleY="{Binding ElementName=Zoom, Path=Value}"/>
                    </UniformGrid.LayoutTransform>
                    <!--uniformgrid is promising, trying to mimic docs-->
                    <!--zoom reference-->
                    <!--https://blogs.msdn.microsoft.com/ivo_manolov/2007/10/05/ui-scaling-ui-zooming-with-wpf/-->
                    <Border Background="AliceBlue">
                        <TextBlock Text="1"/>
                    </Border>
                    <Border Background="Cornsilk">
                        <TextBlock Text="2"/>
                    </Border>
                    <Border Background="DarkSalmon">
                        <TextBlock Text="3"/>
                    </Border>
                    <Border Background="Gainsboro">
                        <TextBlock Text="4"/>
                    </Border>
                    <Border Background="LightBlue">
                        <TextBlock Text="5"/>
                    </Border>
                    <Border Background="MediumAquamarine">
                        <TextBlock Text="6"/>
                    </Border>
                    <Border Background="MistyRose">
                        <TextBlock Text="7"/>
                    </Border>
                </UniformGrid>
            </Border>
        </Grid>
    </Grid>
</Window>
